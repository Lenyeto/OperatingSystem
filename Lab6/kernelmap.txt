
Allocating common symbols
Common symbol       size              file

console_pos_y       0x4               kernelc.o
curColor            0x4               kernelc.o
console_pos_x       0x4               kernelc.o

Discarded input sections

 .comment       0x00000000       0x6f kernelc.o
 .comment       0x00000000       0x6f console.o
 .comment       0x00000000       0x6f kprintf.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00010000                . = 0x10000

.text           0x00010000     0x6410
                0x00010000                stext = .
 *(.text)
 .text          0x00010000       0x10 kernelasm.o
 .text          0x00010010       0x80 kernelc.o
                0x00010010                kmain
 .text          0x00010090      0x6fc console.o
                0x00010090                console_init
                0x0001012c                setpixel
                0x00010184                console_box
                0x000102bc                console_draw_character
                0x000103d0                console_putc
                0x0001060c                console_clear
                0x00010670                kmemset
                0x000106cc                kmemcpy
                0x00010734                debugout
 .text          0x0001078c     0x126c kprintf.o
                0x000108b4                kprintf
                0x000108fc                ksprintf
 *(.rodata)
 .rodata        0x000119f8      0xfde kernelc.o
 *fill*         0x000129d6        0x2 
 .rodata        0x000129d8       0x68 kprintf.o
 *(.rdata)
 *(.rdata$zzz)
                0x00012a40                etext = .
                0x00013000                . = ALIGN (ABSOLUTE (.), 0x1000)
 *fill*         0x00012a40      0x5c0 
                0x00013000                _sdata = .
                0x00013000                sdata = .
 *(.data)
 .data          0x00013000     0x1000 kernelasm.o
                0x00014000                stack
 .data          0x00014000        0x4 kernelc.o
                0x00014000                decl
 .data          0x00014004     0x2400 console.o
 .data          0x00016404        0x0 kprintf.o
                0x00016404                _edata = .
                0x00016404                edata = .
                0x00016404                _sbss = .
                0x00016404                sbss = .
 *(COMMON)
 COMMON         0x00016404        0xc kernelc.o
                0x00016404                console_pos_y
                0x00016408                curColor
                0x0001640c                console_pos_x
 *(.bss)
 .bss           0x00016410        0x0 kernelasm.o
 .bss           0x00016410        0x0 kernelc.o
 .bss           0x00016410        0x0 console.o
 .bss           0x00016410        0x0 kprintf.o
                0x00016410                _ebss = .
                0x00016410                ebss = .

.glue_7         0x00016410        0x0
 .glue_7        0x00016410        0x0 linker stubs

.glue_7t        0x00016410        0x0
 .glue_7t       0x00016410        0x0 linker stubs

.vfp11_veneer   0x00016410        0x0
 .vfp11_veneer  0x00016410        0x0 linker stubs

.v4_bx          0x00016410        0x0
 .v4_bx         0x00016410        0x0 linker stubs

.iplt           0x00016410        0x0
 .iplt          0x00016410        0x0 kernelasm.o

.igot.plt       0x00016410        0x0
 .igot.plt      0x00016410        0x0 kernelasm.o

.rel.dyn        0x00016410        0x0
 .rel.iplt      0x00016410        0x0 kernelasm.o

/DISCARD/
 *(.eh_frame)
 *(.comment)
LOAD kernelasm.o
LOAD kernelc.o
LOAD console.o
LOAD kprintf.o
OUTPUT(kernel.tmp elf32-littlearm)

.ARM.attributes
                0x00000000       0x2e
 .ARM.attributes
                0x00000000       0x22 kernelasm.o
 .ARM.attributes
                0x00000022       0x32 kernelc.o
 .ARM.attributes
                0x00000054       0x32 console.o
 .ARM.attributes
                0x00000086       0x32 kprintf.o
